name: Github Deploy
on:
  push:
    branches: [ main ]
    tags: [ v* ]
jobs:
  cargo-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          cargo login ${{ secrets.CRATE_IO }}
          cargo publish -p four-bar || true
          cargo publish -p four-bar-ui || true
  gh-test-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: four-bar-linux-amd64
            artifact_name: four-bar
          - os: ubuntu-latest
            asset_name: four-bar-wasm-unknown
            artifact_name: docs/
          - os: macos-latest
            asset_name: four-bar-macos-amd64
            artifact_name: four-bar
          - os: windows-latest
            asset_name: four-bar-windows-amd64
            artifact_name: four-bar.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - if: matrix.asset_name == 'four-bar-linux-amd64'
        name: Linux requirements
        run: |
          sudo apt update
          sudo apt install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libgtk-3-dev
      - if: matrix.os == 'windows-latest'
        name: Windows requirements
        run: |
          echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
          vcpkg install openssl:x64-windows-static-md
      - if: matrix.asset_name == 'four-bar-wasm-unknown'
        name: WASM Build
        run: |
          sudo apt update
          sudo apt install -y binaryen
          ./setup_web.sh
          ./build_web.sh
      - if: matrix.asset_name != 'four-bar-wasm-unknown'
        name: Cargo Clippy
        run: cargo clippy -- -D warnings
      - if: matrix.asset_name != 'four-bar-wasm-unknown'
        name: Cargo Build
        run: cargo build --release
      - if: matrix.asset_name != 'four-bar-wasm-unknown'
        name: Pack binaries
        uses: papeloto/action-zip@v1
        with:
          files: target/release/${{ matrix.artifact_name }}
          dest: ${{ matrix.asset_name }}.zip
      - if: matrix.asset_name == 'four-bar-wasm-unknown'
        name: Pack WASM
        uses: thedoctor0/zip-release@0.6.0
        with:
          type: zip
          directory: ${{ matrix.artifact_name }}
          filename: ../${{ matrix.asset_name }}.zip
      - if: matrix.asset_name != 'four-bar-wasm-unknown'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}
          if-no-files-found: error
      - if: matrix.asset_name == 'four-bar-wasm-unknown'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          if-no-files-found: error
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.asset_name != 'four-bar-wasm-unknown'
        name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        with:
          files: ${{ matrix.asset_name }}.zip
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.asset_name == 'four-bar-wasm-unknown'
        name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        with:
          files: ${{ matrix.asset_name }}.zip
      - if: github.ref == 'refs/heads/main' && matrix.asset_name == 'four-bar-wasm-unknown'
        name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: ${{ matrix.artifact_name }}
          CLEAN: true
